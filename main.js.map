{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/home/home.component.ts","./src/app/components/home/home.component.html","./src/app/components/countries/countries.component.ts","./src/app/components/countries/countries.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard-card/dashboard-card.component.ts","./src/app/components/dashboard-card/dashboard-card.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/data-service.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {DataServiceService} from './../../services/data-service.service';\nimport {Component, OnInit} from '@angular/core';\nimport {GlobalDataSummary} from '../../models/global-data';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private dataService: DataServiceService) {\n  }\n\n  totalActive = 0;\n  totalDeaths = 0;\n  totalConfirmed = 0;\n  totalRecovered = 0;\n  globalData: GlobalDataSummary[];\n  datatable = [];\n  loading = true;\n  chart = {\n    PieChart: 'PieChart',\n    ColumnChart: 'ColumnChart',\n    height: 600,\n    options: {\n      animation: {\n        duration: 1000,\n        easing: 'out',\n      },\n      is3D: true,\n    }\n  };\n\n  initChart(caseTypeOfCovid: string) {\n    //this.datatable.push(['Country', 'Cases']);\n    this.datatable = [];\n    this.globalData.forEach(cs => {\n      let value: number;\n      if (caseTypeOfCovid === 'c') {\n        if (cs.confirmed > 100000) {\n          value = cs.confirmed;\n        }\n      }\n      if (caseTypeOfCovid === 'd') {\n        if (cs.deaths > 100000) {\n          value = cs.deaths;\n        }\n      }\n      if (caseTypeOfCovid === 'r') {\n        if (cs.recovered > 100000) {\n          value = cs.recovered;\n        }\n      }\n      if (caseTypeOfCovid === 'a') {\n        if (cs.active > 100000) {\n          value = cs.active;\n        }\n      }\n      this.datatable.push([cs.country, value]);\n    });\n  }\n\n  ngOnInit(): void {\n    this.dataService.getGlobalData().subscribe(\n      {\n        next: (result) => {\n          this.globalData = result;\n          result.forEach(cs => {\n            if (!Number.isNaN(cs.confirmed)) {\n              this.totalActive += cs.active;\n              this.totalDeaths += cs.deaths;\n              this.totalRecovered += cs.recovered;\n              this.totalConfirmed += cs.confirmed;\n            }\n          });\n          this.initChart('a');\n        },\n        complete: () => {\n          this.loading = false;\n        }\n      }\n    );\n  }\n\n  updateChart(inputElement: HTMLInputElement) {\n    this.initChart(inputElement.value);\n  }\n}\n","<div class=\"ui inverted dimmer\" [class.active]=\"loading\">\n  <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotorn bg-white text-center\">\n  <h1 class=\"display-4\">Corona Covid-19 Tracker</h1>\n  <hr>\n  <app-dashboard-card [totalActive]=\"totalActive\" [totalConfirmed]=\"totalConfirmed\" [totalDeaths]=\"totalDeaths\"\n                      [totalRecovered]=\"totalRecovered\"></app-dashboard-card>\n  <hr>\n  <div class=\"ui form\">\n    <div class=\"inline fields\">\n      <label for=\"fruit\">Select case type:</label>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" name=\"casetype\" value=\"a\" id='a' #a (change)='updateChart(a)' checked=\"\" tabindex=\"0\"\n                 class=\"hidden\">\n          <label for='a'>Active</label>\n        </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" name=\"casetype\" value=\"c\" id='c' #c (change)='updateChart(c)' tabindex=\"0\" class=\"hidden\">\n          <label for='c'>Confirmed</label>\n        </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" name=\"casetype\" value=\"d\" id='d' #d (change)='updateChart(d)' tabindex=\"0\" class=\"hidden\">\n          <label for='d'>Death</label>\n        </div>\n      </div>\n      <div class=\"field\">\n        <div class=\"ui radio checkbox\">\n          <input type=\"radio\" name=\"casetype\" value=\"r\" id='r' #r (change)='updateChart(r)' tabindex=\"0\" class=\"hidden\">\n          <label for='r'>Recovered</label>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <google-chart [type]='chart.PieChart' [data]='datatable' [height]='chart.height' [options]='chart.options' style=\"width: 100%;\"></google-chart>\n    </div>\n    <div class=\"col\">\n      <google-chart  [type]='chart.ColumnChart' [data]='datatable' [height]='chart.height'  [options]='chart.options' style=\"width: 100%;\"></google-chart>\n    </div>\n  </div>\n\n\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {DataServiceService} from '../../services/data-service.service';\nimport {GlobalDataSummary} from '../../models/global-data';\nimport {CountryWiseData} from '../../models/country-wise-data';\nimport {merge} from 'rxjs';\nimport {map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  data: GlobalDataSummary[];\n  countries: string[] = [];\n  totalActive = 0;\n  totalConfirmed = 0;\n  totalRecovered = 0;\n  totalDeaths = 0;\n  dateWiseData;\n  selectedCountryData: CountryWiseData[];\n  datatable = [];\n  loading = true;\n  chart = {\n    LineChart: 'LineChart',\n    height: 600,\n    options: {\n      animation: {\n        duration: 1000,\n        easing: 'out',\n      },\n      is3D: true,\n    }\n  };\n\n  constructor(private service: DataServiceService) {\n  }\n\n\n  ngOnInit(): void {\n\n    merge(\n      this.service.getDateWiseData().pipe(\n        map(result => {\n          this.dateWiseData = result;\n        })),\n      this.service.getGlobalData().pipe(\n        map(result => {\n          this.data = result;\n          this.data.forEach(cs => {\n            this.countries.push(cs.country);\n          });\n        }))).subscribe({\n      complete: () => {\n        this.updateValues('Afghanistan');\n        this.loading = false;\n      }\n    });\n\n    // this.service.getGlobalData().subscribe(result => {\n    //   this.data = result;\n    //   this.data.forEach(cs => {\n    //     this.countries.push(cs.country);\n    //   });\n    // });\n\n    // this.service.getDateWiseData().subscribe(result => {\n    //   this.dateWiseData = result;\n    // });\n  }\n\n  updateValues(country: string) {\n    this.data.forEach(values => {\n      if (values.country === country) {\n        this.totalActive = values.active;\n        this.totalConfirmed = values.confirmed;\n        this.totalRecovered = values.recovered;\n        this.totalDeaths = values.deaths;\n      }\n    });\n    this.selectedCountryData = this.dateWiseData[country];\n    this.datatable = [];\n    this.selectedCountryData.forEach(rs => {\n      this.datatable.push([rs.date, rs.cases]);\n    });\n\n  }\n}\n","<div class=\"ui inverted dimmer\" [class.active]=\"loading\">\n  <div class=\"ui text loader\">Loading</div>\n</div>\n<div class=\"jumbotorn bg-white text-center\">\n  <h1 class=\"display-4\">Corona Covid-19 Tracker Country Wise</h1>\n  <hr>\n  <div class=\"mx-auto\">\n    <div class=\"form-group col-lg-5 mx-auto\">\n      <label for=\"c\">Select Country</label>\n      <select name=\"\" class=\"form-control\" id=\"c\" #input (change)=\"updateValues(input.value)\">\n        <option value=\"{{country}}\" *ngFor=\"let country of countries\">{{country}}</option>\n      </select>\n    </div>\n  </div>\n  <app-dashboard-card [totalActive]='totalActive' [totalConfirmed]='totalConfirmed' [totalDeaths]='totalDeaths'\n                      [totalRecovered]='totalRecovered'></app-dashboard-card>\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <table class=\"table\">\n        <thead>\n        <tr>\n          <th>Sno.</th>\n          <th>Date</th>\n          <th>Number of Cases</th>\n        </tr>\n        </thead>\n        <tbody>\n        <tr *ngFor=\"let cs of selectedCountryData; index as i\">\n          <td>{{i + 1}}</td>\n          <td>{{cs.date | date}}</td>\n          <td>{{cs.cases}}</td>\n        </tr>\n        </tbody>\n      </table>\n    </div>\n    <div class=\"col\">\n      <google-chart [type]='chart.LineChart' [data]='datatable' [height]='chart.height' [options]='chart.options'\n                    style=\"width: 100%;\"></google-chart>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'covid19-tracker';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { CountriesComponent } from './components/countries/countries.component';\nimport {HttpClientModule} from '@Angular/common/http';\nimport { DashboardCardComponent } from './components/dashboard-card/dashboard-card.component';\nimport { GoogleChartsModule } from 'angular-google-charts';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    HomeComponent,\n    CountriesComponent,\n    DashboardCardComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard-card',\n  templateUrl: './dashboard-card.component.html',\n  styleUrls: ['./dashboard-card.component.css']\n})\nexport class DashboardCardComponent implements OnInit {\n\n  @Input('totalConfirmed')\n  totalConfirmed;\n  @Input('totalRecovered')\n  totalRecovered;\n  @Input('totalDeaths')\n  totalDeaths;\n  @Input('totalActive')\n  totalActive;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h3>Confirmed</h3>\n      </div>\n      <div class=\"value\">\n        <h1>{{totalConfirmed}}</h1>\n      </div>\n    </div>\n  </div>\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h3>Active</h3>\n      </div>\n      <div class=\"value\">\n        <h1>{{totalActive}}</h1>\n      </div>\n    </div>\n  </div>\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h3>Deaths</h3>\n      </div>\n      <div class=\"value\">\n        <h1>{{totalDeaths}}</h1>\n      </div>\n    </div>\n  </div>\n  <div class=\"card col p-3 m-3\">\n    <div class=\"ui statistic\">\n      <div class=\"label\">\n        <h3>Recovered</h3>\n      </div>\n      <div class=\"value\">\n        <h1>{{totalRecovered}}</h1>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div class=\"container-fluid\">\n      <a class=\"navbar-brand\" routerLink='/'>Covid-19 Tracker</a>\n      <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n      <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link active\" aria-current=\"page\" routerLink='/'>Home</a>\n          </li>\n          <li class=\"nav-item\">\n            <a class=\"nav-link\" routerLink='countries'>Countries</a>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>","import {GlobalDataSummary} from './../models/global-data';\nimport {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {map} from 'rxjs/operators';\nimport {formatDate} from '@angular/common';\nimport {CountryWiseData} from '../models/country-wise-data';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataServiceService {\n  currentDate = new Date();\n  private globalDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_daily_reports/` + formatDate(this.currentDate.setDate(this.currentDate.getDate() - 1), 'MM-dd-yyyy', 'en-US') + `.csv`;\n  private dateWiseDataUrl = `https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv`;\n\n  constructor(private client: HttpClient) {\n  }\n\n  getDateWiseData() {\n    return this.client.get(this.dateWiseDataUrl, {responseType: 'text'})\n      .pipe(map(result => {\n        let rows = result.split('\\n');\n        let main;\n        let mainData = {};\n        let header = rows[0];\n        let dates = header.split(/,(?=\\S)/);\n        dates.splice(0, 4);\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n          let country = cols[1];\n          cols.splice(0, 4);\n          mainData[country] = [];\n          cols.forEach((value, index) => {\n            let dateWise: CountryWiseData = {\n              country: country,\n              cases: +value,\n              date: new Date(Date.parse(dates[index]))\n            };\n            mainData[country].push(dateWise);\n          });\n        });\n        return mainData;\n      }));\n  }\n\n  getGlobalData() {\n    return this.client.get(this.globalDataUrl, {responseType: 'text'}).pipe(\n      map(result => {\n        let data: GlobalDataSummary[] = [];\n        let raw = {};\n        let rows = result.split('\\n');\n        rows.splice(0, 1);\n        rows.forEach(row => {\n          let cols = row.split(/,(?=\\S)/);\n          let cs = {\n            country: cols[3],\n            confirmed: +cols[7],\n            deaths: +cols[8],\n            recovered: +cols[9],\n            active: +cols[10]\n          };\n          let temp: GlobalDataSummary = raw[cs.country];\n          if (temp) {\n            temp.active = cs.active + temp.active;\n            temp.confirmed = cs.confirmed + temp.confirmed;\n            temp.deaths = cs.deaths + temp.deaths;\n            temp.recovered = cs.recovered + temp.recovered;\n\n            raw[cs.country] = temp;\n          } else {\n            raw[cs.country] = cs;\n          }\n        });\n        return Object.values(raw) as GlobalDataSummary[];\n      })\n    );\n  }\n}\n","import { CountriesComponent } from './components/countries/countries.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {path:'', component:HomeComponent},\n  {path:'countries', component:CountriesComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}